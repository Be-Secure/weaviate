package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// PlacesHandleInvitationRequest places handle invitation request
// swagger:model PlacesHandleInvitationRequest
type PlacesHandleInvitationRequest struct {

	// Action to perform on the invitation, accept or decline.
	Action string `json:"action,omitempty"`

	// Email of the member to accept or decline the invitation for.
	MemberID string `json:"memberId,omitempty"`
}

// Validate validates this places handle invitation request
func (m *PlacesHandleInvitationRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAction(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var placesHandleInvitationRequestTypeActionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["accept","decline"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		placesHandleInvitationRequestTypeActionPropEnum = append(placesHandleInvitationRequestTypeActionPropEnum, v)
	}
}

const (
	placesHandleInvitationRequestActionAccept  string = "accept"
	placesHandleInvitationRequestActionDecline string = "decline"
)

// prop value enum
func (m *PlacesHandleInvitationRequest) validateActionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, placesHandleInvitationRequestTypeActionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *PlacesHandleInvitationRequest) validateAction(formats strfmt.Registry) error {

	if swag.IsZero(m.Action) { // not required
		return nil
	}

	// value enum
	if err := m.validateActionEnum("action", "body", m.Action); err != nil {
		return err
	}

	return nil
}
