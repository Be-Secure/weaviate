//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2024 Weaviate B.V. All rights reserved.
//
//  CONTACT: hello@weaviate.io
//

// Code generated by go-swagger; DO NOT EDIT.

package replication

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/weaviate/weaviate/entities/models"
)

// PurgeReplicationsReader is a Reader for the PurgeReplications structure.
type PurgeReplicationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PurgeReplicationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPurgeReplicationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPurgeReplicationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPurgeReplicationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPurgeReplicationsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPurgeReplicationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPurgeReplicationsOK creates a PurgeReplicationsOK with default headers values
func NewPurgeReplicationsOK() *PurgeReplicationsOK {
	return &PurgeReplicationsOK{}
}

/*
PurgeReplicationsOK describes a response with status code 200, with default header values.

All operations purged successfully.
*/
type PurgeReplicationsOK struct {
}

// IsSuccess returns true when this purge replications o k response has a 2xx status code
func (o *PurgeReplicationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this purge replications o k response has a 3xx status code
func (o *PurgeReplicationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this purge replications o k response has a 4xx status code
func (o *PurgeReplicationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this purge replications o k response has a 5xx status code
func (o *PurgeReplicationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this purge replications o k response a status code equal to that given
func (o *PurgeReplicationsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the purge replications o k response
func (o *PurgeReplicationsOK) Code() int {
	return 200
}

func (o *PurgeReplicationsOK) Error() string {
	return fmt.Sprintf("[POST /replication/replicate/purge][%d] purgeReplicationsOK ", 200)
}

func (o *PurgeReplicationsOK) String() string {
	return fmt.Sprintf("[POST /replication/replicate/purge][%d] purgeReplicationsOK ", 200)
}

func (o *PurgeReplicationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPurgeReplicationsUnauthorized creates a PurgeReplicationsUnauthorized with default headers values
func NewPurgeReplicationsUnauthorized() *PurgeReplicationsUnauthorized {
	return &PurgeReplicationsUnauthorized{}
}

/*
PurgeReplicationsUnauthorized describes a response with status code 401, with default header values.

Unauthorized or invalid credentials.
*/
type PurgeReplicationsUnauthorized struct {
}

// IsSuccess returns true when this purge replications unauthorized response has a 2xx status code
func (o *PurgeReplicationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this purge replications unauthorized response has a 3xx status code
func (o *PurgeReplicationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this purge replications unauthorized response has a 4xx status code
func (o *PurgeReplicationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this purge replications unauthorized response has a 5xx status code
func (o *PurgeReplicationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this purge replications unauthorized response a status code equal to that given
func (o *PurgeReplicationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the purge replications unauthorized response
func (o *PurgeReplicationsUnauthorized) Code() int {
	return 401
}

func (o *PurgeReplicationsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /replication/replicate/purge][%d] purgeReplicationsUnauthorized ", 401)
}

func (o *PurgeReplicationsUnauthorized) String() string {
	return fmt.Sprintf("[POST /replication/replicate/purge][%d] purgeReplicationsUnauthorized ", 401)
}

func (o *PurgeReplicationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPurgeReplicationsForbidden creates a PurgeReplicationsForbidden with default headers values
func NewPurgeReplicationsForbidden() *PurgeReplicationsForbidden {
	return &PurgeReplicationsForbidden{}
}

/*
PurgeReplicationsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PurgeReplicationsForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this purge replications forbidden response has a 2xx status code
func (o *PurgeReplicationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this purge replications forbidden response has a 3xx status code
func (o *PurgeReplicationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this purge replications forbidden response has a 4xx status code
func (o *PurgeReplicationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this purge replications forbidden response has a 5xx status code
func (o *PurgeReplicationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this purge replications forbidden response a status code equal to that given
func (o *PurgeReplicationsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the purge replications forbidden response
func (o *PurgeReplicationsForbidden) Code() int {
	return 403
}

func (o *PurgeReplicationsForbidden) Error() string {
	return fmt.Sprintf("[POST /replication/replicate/purge][%d] purgeReplicationsForbidden  %+v", 403, o.Payload)
}

func (o *PurgeReplicationsForbidden) String() string {
	return fmt.Sprintf("[POST /replication/replicate/purge][%d] purgeReplicationsForbidden  %+v", 403, o.Payload)
}

func (o *PurgeReplicationsForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PurgeReplicationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPurgeReplicationsUnprocessableEntity creates a PurgeReplicationsUnprocessableEntity with default headers values
func NewPurgeReplicationsUnprocessableEntity() *PurgeReplicationsUnprocessableEntity {
	return &PurgeReplicationsUnprocessableEntity{}
}

/*
PurgeReplicationsUnprocessableEntity describes a response with status code 422, with default header values.

Request body is well-formed (i.e., syntactically correct), but semantically erroneous.
*/
type PurgeReplicationsUnprocessableEntity struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this purge replications unprocessable entity response has a 2xx status code
func (o *PurgeReplicationsUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this purge replications unprocessable entity response has a 3xx status code
func (o *PurgeReplicationsUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this purge replications unprocessable entity response has a 4xx status code
func (o *PurgeReplicationsUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this purge replications unprocessable entity response has a 5xx status code
func (o *PurgeReplicationsUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this purge replications unprocessable entity response a status code equal to that given
func (o *PurgeReplicationsUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the purge replications unprocessable entity response
func (o *PurgeReplicationsUnprocessableEntity) Code() int {
	return 422
}

func (o *PurgeReplicationsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /replication/replicate/purge][%d] purgeReplicationsUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PurgeReplicationsUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /replication/replicate/purge][%d] purgeReplicationsUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PurgeReplicationsUnprocessableEntity) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PurgeReplicationsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPurgeReplicationsInternalServerError creates a PurgeReplicationsInternalServerError with default headers values
func NewPurgeReplicationsInternalServerError() *PurgeReplicationsInternalServerError {
	return &PurgeReplicationsInternalServerError{}
}

/*
PurgeReplicationsInternalServerError describes a response with status code 500, with default header values.

An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.
*/
type PurgeReplicationsInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this purge replications internal server error response has a 2xx status code
func (o *PurgeReplicationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this purge replications internal server error response has a 3xx status code
func (o *PurgeReplicationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this purge replications internal server error response has a 4xx status code
func (o *PurgeReplicationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this purge replications internal server error response has a 5xx status code
func (o *PurgeReplicationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this purge replications internal server error response a status code equal to that given
func (o *PurgeReplicationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the purge replications internal server error response
func (o *PurgeReplicationsInternalServerError) Code() int {
	return 500
}

func (o *PurgeReplicationsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /replication/replicate/purge][%d] purgeReplicationsInternalServerError  %+v", 500, o.Payload)
}

func (o *PurgeReplicationsInternalServerError) String() string {
	return fmt.Sprintf("[POST /replication/replicate/purge][%d] purgeReplicationsInternalServerError  %+v", 500, o.Payload)
}

func (o *PurgeReplicationsInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PurgeReplicationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
