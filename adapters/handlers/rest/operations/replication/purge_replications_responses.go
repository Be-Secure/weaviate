//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2024 Weaviate B.V. All rights reserved.
//
//  CONTACT: hello@weaviate.io
//

// Code generated by go-swagger; DO NOT EDIT.

package replication

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/weaviate/weaviate/entities/models"
)

// PurgeReplicationsOKCode is the HTTP code returned for type PurgeReplicationsOK
const PurgeReplicationsOKCode int = 200

/*
PurgeReplicationsOK All operations purged successfully.

swagger:response purgeReplicationsOK
*/
type PurgeReplicationsOK struct {
}

// NewPurgeReplicationsOK creates PurgeReplicationsOK with default headers values
func NewPurgeReplicationsOK() *PurgeReplicationsOK {

	return &PurgeReplicationsOK{}
}

// WriteResponse to the client
func (o *PurgeReplicationsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// PurgeReplicationsUnauthorizedCode is the HTTP code returned for type PurgeReplicationsUnauthorized
const PurgeReplicationsUnauthorizedCode int = 401

/*
PurgeReplicationsUnauthorized Unauthorized or invalid credentials.

swagger:response purgeReplicationsUnauthorized
*/
type PurgeReplicationsUnauthorized struct {
}

// NewPurgeReplicationsUnauthorized creates PurgeReplicationsUnauthorized with default headers values
func NewPurgeReplicationsUnauthorized() *PurgeReplicationsUnauthorized {

	return &PurgeReplicationsUnauthorized{}
}

// WriteResponse to the client
func (o *PurgeReplicationsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// PurgeReplicationsForbiddenCode is the HTTP code returned for type PurgeReplicationsForbidden
const PurgeReplicationsForbiddenCode int = 403

/*
PurgeReplicationsForbidden Forbidden

swagger:response purgeReplicationsForbidden
*/
type PurgeReplicationsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPurgeReplicationsForbidden creates PurgeReplicationsForbidden with default headers values
func NewPurgeReplicationsForbidden() *PurgeReplicationsForbidden {

	return &PurgeReplicationsForbidden{}
}

// WithPayload adds the payload to the purge replications forbidden response
func (o *PurgeReplicationsForbidden) WithPayload(payload *models.ErrorResponse) *PurgeReplicationsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the purge replications forbidden response
func (o *PurgeReplicationsForbidden) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PurgeReplicationsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PurgeReplicationsUnprocessableEntityCode is the HTTP code returned for type PurgeReplicationsUnprocessableEntity
const PurgeReplicationsUnprocessableEntityCode int = 422

/*
PurgeReplicationsUnprocessableEntity Request body is well-formed (i.e., syntactically correct), but semantically erroneous.

swagger:response purgeReplicationsUnprocessableEntity
*/
type PurgeReplicationsUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPurgeReplicationsUnprocessableEntity creates PurgeReplicationsUnprocessableEntity with default headers values
func NewPurgeReplicationsUnprocessableEntity() *PurgeReplicationsUnprocessableEntity {

	return &PurgeReplicationsUnprocessableEntity{}
}

// WithPayload adds the payload to the purge replications unprocessable entity response
func (o *PurgeReplicationsUnprocessableEntity) WithPayload(payload *models.ErrorResponse) *PurgeReplicationsUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the purge replications unprocessable entity response
func (o *PurgeReplicationsUnprocessableEntity) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PurgeReplicationsUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PurgeReplicationsInternalServerErrorCode is the HTTP code returned for type PurgeReplicationsInternalServerError
const PurgeReplicationsInternalServerErrorCode int = 500

/*
PurgeReplicationsInternalServerError An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.

swagger:response purgeReplicationsInternalServerError
*/
type PurgeReplicationsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPurgeReplicationsInternalServerError creates PurgeReplicationsInternalServerError with default headers values
func NewPurgeReplicationsInternalServerError() *PurgeReplicationsInternalServerError {

	return &PurgeReplicationsInternalServerError{}
}

// WithPayload adds the payload to the purge replications internal server error response
func (o *PurgeReplicationsInternalServerError) WithPayload(payload *models.ErrorResponse) *PurgeReplicationsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the purge replications internal server error response
func (o *PurgeReplicationsInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PurgeReplicationsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
